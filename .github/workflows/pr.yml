on: pull_request

name: PR-workflow

jobs:
  bookdown:
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    name: Render Book
    runs-on: macOS-latest
    if: github.repository == 'ropenscilabs/statistical-software-review-book'
    steps:
      - name: Is this a fork
        run: |
          fork=$(jq --raw-output .pull_request.head.repo.fork "${GITHUB_EVENT_PATH}");echo "fork=${fork}" >> $GITHUB_ENV
          if [ $fork == 'false' ]
          then
            echo "This is not a fork, we shall deploy a preview."
          else
            echo "This is a fork, we shall not deploy a preview."
          fi

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@v1

      - name: pandoc
        uses: r-lib/actions/setup-pandoc@v1

      - name: tinytex
        uses: r-lib/actions/setup-tinytex@v1

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ hashFiles('DESCRIPTION') }}

      - name: Install dependencies
        run: Rscript -e 'install.packages("remotes")' -e 'options(install.packages.check.source = "both")' -e 'remotes::install_deps(dependencies = TRUE)'

      - name: Render book html
        run: Rscript -e 'bookdown::render_book("index.Rmd")'

          #- name: Render book PDF
          #run: Rscript -e 'bookdown::render_book("index.Rmd", new_session = FALSE, "bookdown::pdf_book", output_dir = "pdfbook")'

          #- name: Move files around
          #run: Rscript -e 'file.copy(from = "pdfbook/ropenscilabs-statistical-software-review-book.pdf", to = "_book/ropenscilabs-statistical-software-review-book.pdf")' -e 'purrr::walk(list.files("images", full.names = TRUE), file.copy, to = "_book/images")'

      - uses: actions/setup-node@v1

      - name: Install Netlify CLI
        run: npm install netlify-cli -g

      - name: Deploy to Netlify (test)
        run: DEPLOY_URL=$(netlify deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --dir=docs --json | jq '.deploy_url' --raw-output);echo "DEPLOY_URL=${DEPLOY_URL}" >> $GITHUB_ENV

      - name: Update commit status
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.pull_request.head.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Accept: application/vnd.github.antiope-preview+json' \
          --header 'content-type: application/json' \
          --data '{
            "state": "success",
            "target_url": "${{ env.DEPLOY_URL }}",
            "context": "Netlify"
            }'
