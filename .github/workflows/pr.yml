on: pull_request

name: PR-workflow

jobs:
  bookdown:
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    name: Render Book
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    if: github.repository == 'ropensci/statistical-software-review-book'
    steps:
      - name: Is this a fork
        run: |
          fork=$(jq --raw-output .pull_request.head.repo.fork "${GITHUB_EVENT_PATH}");echo "fork=${fork}" >> $GITHUB_ENV
          if [ $fork == 'false' ]
          then
            echo "This is not a fork, we shall deploy a preview."
          else
            echo "This is a fork, we shall not deploy a preview."
          fi

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@v1

      - name: pandoc
        uses: r-lib/actions/setup-pandoc@v1

      - name: tinytex
        uses: r-lib/actions/setup-tinytex@v1

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ hashFiles('DESCRIPTION') }}

      - name: Install dependencies
        run: Rscript -e 'install.packages("remotes")' -e 'options(install.packages.check.source = "both")' -e 'remotes::install_deps(dependencies = TRUE)'

      - name: Render book html
        run: Rscript -e 'bookdown::render_book("index.Rmd", "bookdown::bs4_book")'

          #- name: Render book PDF
          #run: Rscript -e 'bookdown::render_book("index.Rmd", new_session = FALSE, "bookdown::pdf_book", output_dir = "pdfbook")'

          #- name: Move files around
          #run: Rscript -e 'file.copy(from = "pdfbook/ropensci-statistical-software-review-book.pdf", to = "_book/ropensci-statistical-software-review-book.pdf")' -e 'purrr::walk(list.files("images", full.names = TRUE), file.copy, to = "_book/images")'

      - uses: actions/setup-node@v1

      - name: Deploy to Netlify
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './_book'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message:
            'Deploy from GHA: ${{ github.event.pull_request.title || github.event.head_commit.message }} (${{ github.sha }})'
          # these all default to 'true'
          enable-pull-request-comment: false
          enable-commit-comment: false
          # enable-commit-status: true
          #o verwrites-pull-request-comment: true
        timeout-minutes: 1
